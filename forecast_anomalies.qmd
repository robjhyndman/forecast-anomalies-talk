---
title: Probabilistic forecasts for anomaly detection
author: Rob J Hyndman
date: 3 July 2024
titlegraphic: bg-06.png
toc: false
abstract: When a forecast is very inaccurate, it is sometimes because a poor forecasting model is used, but it can also occur when an unusual observation occurs. I will discuss the latter situation, where a good forecasting model can be used to identify anomalies. The approach taken is to use a probabilistic forecast, and to compute the "density scores" equal to the negative log likelihood of the observations based on the forecast distributions. The density scores provide a measure of how anomalous each observation is, given the forecast density. A large density score indicates that the observation is unlikely, and so is a potential anomaly. On the other hand, typical values will have low density scores. A Generalized Pareto Distribution is fitted to the largest density scores to estimate the probability of each observation being an anomaly.  Applications to tourism numbers and mortality data will be used to illustrate the ideas using the weird R package.
format:
  presentation-beamer:
    template-partials:
        - before-title.tex
    knitr:
      opts_chunk:
        dev: "CairoPDF"
execute:
  cache: false
  echo: true
  warning: false
  message: false
---

```{r}
#| label: load-packages
#| echo: false
#| include: false
library(knitr)
library(targets)
library(fpp3)
tar_load(c("pbs", "pbs_stretch", "pbs_fit", "pbs_fc", "pbs_scores"))

# Colours to be viridis for continuous scales and Okabe for discrete scales
options(
  digits = 3,
  width = 70,
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
# Fira Sans font for graphics to match the main text
ggplot2::theme_set(ggplot2::theme_get() + ggplot2::theme(text = ggplot2::element_text(family = "Fira Sans")))
```

# Australian PBS data
## Australian PBS data

```{r}
#| label: pbs
pbs
```

## Australian PBS data

```{r}
#| label: pbs2
#| echo: false
tar_read(rplots)
```

## Main idea

* Estimate one-step forecast densities: $f(y | y_1,\dots,y_{t-1})$.
* Anomaly score: $s_{t} = -\hat{f}(y_{t}| y_1,\dots,y_{t-1})$.
* High anomaly scores indicate potential anomalies.
* Fit a Generalized Pareto Distribution to the top 5% of anomaly scores.
* Estimate the probability of each observation being an anomaly.

## Anomaly score distribution

\only<1-4>{\begin{textblock}{10}(0.2,2)\fontsize{13}{14}\sf
Suppose one-step forecasts are $N(\mu_t, \sigma^2)$.
\end{textblock}
\placefig{10.5}{1.2}{width = 5.1cm}{figures/n01.png}}

\only<2-4>{\begin{textblock}{10}(0.2,4.2)\fontsize{13}{14}\sf
Then $s_t = -\log \phi\left(\frac{y_t - \mu_t}{\sigma}\right) = \frac{1}{2}\left(\frac{y_t - \mu_t}{\sigma}\right)^2 + \frac{1}{2}\log(2\pi\sigma^2)$

So anomaly scores have distribution: $S \sim \frac12 \chi^2_1 + c$
\end{textblock}
\placefig{10.5}{3.8}{width = 5.1cm}{figures/as.png}
}

\only<3-4>{\begin{textblock}{10}(0.2,6.8)\fontsize{13}{14}\sf
Conditional probability distribution of scores above threshold $u$ is Generalized Pareto:\vspace*{0.15cm}

\centerline{$H(x) = P(S \le u + x \mid S > u) = 1 - (1 + \xi x/v)^{-1/\xi}$}
\end{textblock}
\placefig{10.5}{6.4}{width = 5.1cm}{figures/ase.png}
}

\only<4>{\begin{textblock}{9.7}(0.35,1.75)
\fontsize{14}{20}\sf
\begin{alertblock}{}
Extreme value theory shows that the Generalized Pareto distribution is a good approximation to the distribution of the largest anomaly scores for almost all possible forecast distributions.
\end{alertblock}
\end{textblock}}

## Rolling origin forecasts

```{r}
#| label: tscvplots
#| echo: false
tar_read(tscvplot)
```

## Rolling origin forecasts

```{r}
#| label: pbsstretch
#| echo: true
#| eval: false
pbs_stretch <- stretch_tsibble(pbs, .step = 1, .init = 36)
```

```{r}
#| label: pbsstretch2
#| echo: false
pbs_stretch
```

## Rolling origin forecasts

```{r}
#| label: pbsfit
#| echo: true
#| eval: false
pbs_fit <- pbs_stretch |> model(ets = ETS(Scripts))
```

```{r}
#| label: pbsfit2
#| echo: false
pbs_fit
```

## Rolling origin forecasts

```{r}
#| label: pbsfc
#| echo: true
#| eval: false
pbs_fc <- forecast(pbs_fit, h = 1)
```

```{r}
#| label: pbsfc2
#| echo: false
#| eval: true
pbs_fc
```

## Finding anomalies

```{r}
#| label: pbs_scores
#| echo: true
#| eval: false
pbs_scores <- pbs_fc |>
  left_join(pbs |> rename(actual = Scripts), by = c("ATC2", "Month")) |>
  mutate(
    s = -log_likelihood(Scripts, actual), # Density scores
    prob = lookout(density_scores = s)    # Probability not an anomaly
  )
```

```{r}
#| label: pbs_scores2
#| echo: false
#| eval: true
pbs_scores
```

## Finding anomalies

```{r}
#| label: pbs_scores3
pbs_scores |> filter(prob < 0.05)
pbs |> filter(ATC2 == "R03") |> autoplot()
```

## Online anomaly detection


- Demonstrate using weird package with (a) univariate models for tourism data; and (b) univariate models for age-specific time series from French mortality.
